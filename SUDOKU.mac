SUDOKU  ;
     kill 
     for i=1:1:9 write $text(welcome+i),!
     read "go:",go#1,!
     quit:".,"[$e(go)&&$l(go)
     
     ; terminal controls
new  set tCSI  =$c(27)_"["
        ,tNORM=tCSI_"0;30;43m"  ; black on yellow 
        ,tBRED=tCSI_"1;31;46m"    
        ,tREVS=tCSI_"1;7;37;44m"
        ,tHOME=tCSI_"H"
        ,key=0
        ,free=123456789
 
    for row=1:1:9 {
 #; init freemap
        set (box("R",row),box("C",row),box("G",row))=free
        for col=1:1:9 {
#;  no grid entry, ,0) = display position
            set box(row,col)=" "
                ,box(row,col,0)=tCSI_(row-1*5+2)_";"_(col-1*4+3)_"H"
                ,grp=(row-1\3+1)+(col-1\3*3)
 #; ,1) = group number
                ,box(row,col,1)=grp
 #; group index + coordinates
                ,grp(grp)=$g(grp(grp))_$lb(col/10+row)
            } 
       }  
home 
    do show0
    set (row,col,loop)=1
    while loop { do input }
    do show0 
    if in="?" do solver goto home
exit
    write tCSI_"45;0H",tCSI_"m",! ;reset all          
    quit
#; debugging entry    
step
    kill
    set %step=1 goto new    
#; get 1 char or a cursor key or <CR>    
input 
    read in#1
    set key=$key
        ,int=$s(+in:in,1:" ")
#; save test data    
    if in="^" {
        kill ^box 
        merge ^box=box 
        do show0 
        goto input
        }
#; load test data        
    elseif in="!" {
        merge box=^box 
        do show0
        goto input
        }
    if $l(in) {
 #; program stop with ,. ? => solver       
        if ".,?"[in set loop=0 quit
 #; process input
        if $$valid quit
        }
 #; cursor navigation
    if key=$c(13) set key=tCSI_"C" 
    if $e(key,1,2)=tCSI {
        set k=$e(key,3)
        if $l(k),"ABCD"[k do @k write box(row,col,0)
        }
    else {
        set old=$e(box(row,col))
        if old'=int {
            set box(row,col)=int
            do valid()
        }
    }
    quit  
A   if row>1,$i(row,-1)
    else  set row=9
    quit
B   if row<9,$i(row) 
    else  set row=1
    quit
C   if col<9,$i(col)
    else  set col=1
    quit
D   if col>1,$i(col,-1)
    else  set col=9
    quit
 
#; check for valid entry or forget it
valid() 
    set old=+box(row,col)
    	,grp=box(row,col,1)
    if int=" " {
           do clear(old)
           set box(row,col)=int
        }
    elseif int'=box(row,col) {
      if $$check(int) { 
        do clear(old)
          ,lock(int)
        set box(row,col)=int
        }
    }
    set cl=col,rw=row,gr=grp
    do show
    set col=cl,row=rw,grp=gr
    write box(row,col,0)
    quit 1 
    
#; is the value allowed in all dimensions
check(val) 
    if box("R",row)[val,box("C",col)[val,box("G",grp)[val
    quit $test


#; release old value
clear(val) 
    set $e(box("R",row),val)=val
    	,$e(box("C",col),val)=val
    	,$e(box("G",grp),val)=val
    quit

#; lock new value
lock(val)
    set $e(box("R",row),val)="."
    	,$e(box("C",col),val)="."
    	,$e(box("G",grp),val)="."
    quit   

#; show and goto (1,1)
show0 do show
      write box(1,1,0)         
      quit    
#; simple show
show write #!,tHOME,tBRED do lin
    for row=1:1:9 {
        for col=1:1:9 { do box0 }  write tBRED,"|",!
        for col=1:1:9 { do box1 }  write tBRED,"|",!
        for col=1:1:9 { do box2 }  write tBRED,"|",!
        for col=1:1:9 { do box3 }  write tBRED,"|",!
        do lin
    }
    quit

#; 4 lines by box    
box0 do bx write "|",tNORM," ",tREVS,box(row,col),tNORM," " quit 
box1 do bx write "|",tNORM,$e($$opt,1,3) quit   
box2 do bx write "|",tNORM,$e($$opt,4,6) quit   
box3 do bx write "|",tNORM,$e($$opt,7,9) quit 
bx   write:col#3=1 tBRED quit

#; generate available values
opt()
    set free=""
	 	,grp=box(row,col,1)
    for int=1:1:9 set free=free_$s($$check(int):int,1:".") 
    quit free  
    
#;separator, header, footer     
lin  
    for col= 1:1:9 Write tBRED,"+",$s(row#3:tNORM,1:""),"---"
    write tBRED,"+",!
    quit
    
#; fill automatically obvious values  by "?"  
solver 
	do {
		set find=0
		for row=1:1:9 {
	        for col=1:1:9 {
	            if ($e(box(row,col))=" ") {
	                set int=$tr($$opt,".")
	                if $l(int)=1 {
		                if $$valid()
	                    if $i(find)    
	                    if $g(%step) write tCSI,"C?" read x#1
		               }
		            }
		        }
		    }
		} while find
	quit
	
welcome /*
	;; Welcome to this SUDOKU demo !
	;; you may solve your SUDOKU easier or create your own
	;; under each box entry you find a list 
	;; of allowed values for this box
	;; fill in numbers 1..9 as you need
	;; to clear a box enter any character or blank
	;; to stop enter . or ,  for the solver enter ?
	;; navigate between boxes by cursor keys <>^v
	;; 
	*/
